# Generated by Django 5.2.5 on 2025-08-09 17:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DivisionFiscale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FormeJuridique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_telephone', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegimeFiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('type_client', models.CharField(choices=[('particulier', 'Particulier'), ('entreprise', 'Entreprise')], default='particulier', max_length=20)),
                ('accepte_facture_electronique', models.BooleanField(default=False)),
                ('accepte_cgv', models.BooleanField(default=False)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('roles', models.ManyToManyField(blank=True, related_name='users', to='utilisateurs.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoriqueConnexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('date_connexion', models.DateTimeField(auto_now_add=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historiques_connexion', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTVANumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_tva', models.CharField(max_length=30)),
                ('pays', models.CharField(max_length=100)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numero_tva_valides', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('utilisateur', 'numero_tva')},
            },
        ),
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilisation', models.CharField(choices=[('facturation', 'Facturation'), ('livraison', 'Livraison')], max_length=20)),
                ('type_client', models.CharField(choices=[('particulier', 'Particulier'), ('entreprise', 'Entreprise')], default='particulier', max_length=20)),
                ('nom_complet', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=20)),
                ('raison_sociale', models.CharField(blank=True, max_length=255, null=True)),
                ('rccm', models.CharField(blank=True, max_length=100, null=True)),
                ('ifu', models.CharField(blank=True, max_length=100, null=True)),
                ('rue', models.CharField(max_length=255)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=20)),
                ('livraison_identique_facturation', models.BooleanField(default=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adresses', to=settings.AUTH_USER_MODEL)),
                ('division_fiscale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='utilisateurs.divisionfiscale')),
                ('forme_juridique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='utilisateurs.formejuridique')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='utilisateurs.pays')),
                ('regime_fiscal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='utilisateurs.regimefiscal')),
                ('numero_tva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adresses', to='utilisateurs.usertvanumber')),
            ],
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_roles', to='utilisateurs.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='utilisateurs.role')),
            ],
            options={
                'unique_together': {('role', 'permission')},
            },
        ),
    ]
